[{
        "id": 1,
        "title": "Supply Chamber",
        "description": "Drag commands into this area to build a program.\n\n Your program should tell your worker to grab each thing from the INBOX, and drop it into the OUTBOX.",
        "generatorFunction": "function (generatorFn) {\n    var len = 2;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 2;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(generatorFn(1, 20));\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT"],
        "commandsUsed": [],
        "commandsToUse": ["INPUT", "OUTPUT", "INPUT", "OUTPUT"],
        "constructionSlots": [],
        "expectedCommandCnt": 4,
        "expectedExecuteCnt": 4,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": false,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Welcome to the construction site, young apprentice!", "Building in these ancient ruins is no small feat!", "Your first job will appear over there on the right side in a moment.", "Remember, you can always ask me for help."]
    }, {
        "id": 2,
        "title": "Busy Supply Chamber",
        "description": "Grab each thing from the INBOX, and drop each one into the OUTBOX.\n\n You got a new command!You can drag JUMP 's arrow to jump to different lines within your program.\n\n With this new ability, you can complete this assignment using only 3 total commands.",
        "generatorFunction": "function (generatorFn) {\n    var len = 6;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 6;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(generatorFn(1, 20));\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "JUMP"],
        "commandsUsed": [],
        "constructionSlots": [],
        "expectedCommandCnt": 4,
        "expectedExecuteCnt": 24,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Congratulations on your promotion to Apprentice Craftsman!", "But don’t get too comfortable—the challenges only get harder from here.", "Here is your new assignment."]
    }, {
        "id": 3,
        "title": "Replica Slate",
        "description": "Ignore the INBOX for now, and just send the following 3 numbers to the OUTBOX: \n\n520\n\nThe Facilities Management staff has placed some items over there on the carpet for you.If only there were a way you could pick them up...",
        "generatorFunction": "function (generatorFn) {\n    var len = 6;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    return [5, 2, 0];\n}",
        "commands": ["INPUT", "OUTPUT", "JUMP", "COPYFROM"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380,
            "value": 5
        }, {
            "x": 522.5,
            "y": 380,
            "value": 2
        }, {
            "x": 622.5,
            "y": 380,
            "value": 0
        }],
        "expectedCommandCnt": 8,
        "expectedExecuteCnt": 25,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Oh no!", "The rolling log system that transports stones has broken down!", "But construction can’t wait.", "You’ll have to bypass the system and grab stones directly from the construction slot.", "Think fast and adapt, young craftsman—the structure depends on you!"]
    }, {
        "id": 4,
        "title": "Scrambler Handler",
        "description": "Grab the first TWO things from the INBOX and drop them into the OUTBOX in the reverse order.Repeat until the INBOX is empty.\n\nYou got a new command!Feel free to COPYTO wherever you like on the carpet.It will be cleaned later.",
        "generatorFunction": "function (generatorFn) {\n    var len = 6;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 6;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(generatorFn(1, 20));\n    }\n    for (var i = 0; i < 3; i++) {\n        var tmp = expected[i * 2];\n        expected[i * 2] = expected[i * 2 + 1];\n        expected[i * 2 + 1] = tmp;\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "JUMP", "COPYFROM", "COPYTO"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 8,
        "expectedExecuteCnt": 25,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Good news!", "The rolling log system is fixed, but now the stones are arriving completely out of order!", "Your task is to sort them correctly and ensure each one ends up in its proper place.", "Precision is key—an unorganized foundation could spell disaster for the entire structure!"]
    }, {
        "id": 5,
        "title": "Replica Slate",
        "description": "For each two things in the INBOX, add them together, and put the result in the OUTBOX.\n\nYou got a new command!It ADDs the contents of a tile on the floor to whatever value you 're currently holding.",
        "generatorFunction": "function (generatorFn) {\n    var len = 6;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 3;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(generatorFn(1, 20) + generatorFn(1, 20));\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "JUMP", "COPYFROM", "COPYTO", "ADD"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 7,
        "expectedExecuteCnt": 20,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Sigh…", "The rainy season is here, and the site is a muddy mess.", "The old architect always said, “Stay calm and focused, and not even the rain can stop a great building.", "Don’t worry; math isn’t the key here—just take it one step at a time."]
    }, {
        "id": 6,
        "title": "Tripler Room",
        "description": "For each thing in the INBOX, TRIPLE it!",
        "generatorFunction": "function (generatorFn) {\n    var len = 3;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 3;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(generatorFn(1, 20) * 3);\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "JUMP", "COPYFROM", "COPYTO", "ADD"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 7,
        "expectedExecuteCnt": 20,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Who are you ? !", "This secret area is reserved for only the most exceptional architects.", "And you’re late—seven years late!", "From now on, I expect a 100% increase in efficiency.", "Every task will be scrutinized with the utmost care.", "Good luck!"]
    }, {
        "id": 7,
        "title": "Octoplier Suite",
        "description": "For each thing in the INBOX, multiply it by 8, and put the result in the OUTBOX. \n\nUsing a bunch of ADD commands is easy, but WASTEFUL!Can you do it using only 3 ADD commands ?Management is watching.",
        "generatorFunction": "function (generatorFn) {\n    var len = 3;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 3;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(generatorFn(1, 20) * 8);\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "JUMP", "COPYFROM", "COPYTO", "ADD"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 10,
        "expectedExecuteCnt": 29,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Astonishing!",
            "You've discovered our most secret multiplication workshop!",
            "Every stone here must be precisely transformed to eight times its original weight.",
            "But resources are scarce—you must complete this task with minimal tools.",
            "Remember, a true master isn't defined by how many tools they possess, but by how cleverly they use them."
        ]
    }, {
        "id": 8,
        "title": "Zero Exterminator",
        "description": "Send all things that ARE NOT ZERO to the OUTBOX.\n\nYou got a new command!It jumps ONLY if the value you are holding is ZERO.Otherwise it continues to the next line.",
        "generatorFunction": "function (generatorFn) {\n    var len = 8;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        if (i % 2 === 0) {\n            arr.push(0);\n        }\n        else {\n            arr.push(generatorFn(1, 20));\n        }\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 4;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(generatorFn(1, 20));\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "ADD", "COPYFROM", "COPYTO", "JUMP", "JUMP = 0"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 8,
        "expectedExecuteCnt": 25,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Where do you see yourself in 5 years?", "Or 10 years?", "I have a note here from your other boss that says…", "From this point on, YOUR PERFORMANCE WILL BE EVALUATED WITH EXTRA SCRUTINY.", "What a treat!"]
    }, {
        "id": 9,
        "title": "Zero Preservation",
        "description": "Send only Zeros to the OUTBOX.",
        "generatorFunction": "function (generatorFn) {\n    var len = 8;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        if (i % 2 === 0) {\n            arr.push(0);\n        }\n        else {\n            arr.push(generatorFn(1, 20));\n        }\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    return [0, 0, 0, 0];\n}",
        "commands": ["INPUT", "OUTPUT", "JUMP", "COPYFROM", "COPYTO", "ADD", "JUMP = 0"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 8,
        "expectedExecuteCnt": 25,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Recently, someone suggested we pay more attention to the underappreciated materials.", "This time, you’ll only keep the “zero-weight” stones.", "What about the other materials ? That’s for you to decide!"]
    }, {
        "id": 10,
        "title": "Sub Hallway",
        "description": "For each two things in the INBOX, first subtract the 1 st from the 2nd and put the result in the OUTBOX.AND THEN, subtract the 2n d from the Ist and put the result in the OUTBOX.Repeat.\n\nYou got a new command!SUBtracts the contents of a tile on the floor FROM whatever value you 're currently holding.",
        "generatorFunction": "function (generatorFn) {\n    var len = 8;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 4;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        var first = generatorFn(1, 20);\n        var second = generatorFn(1, 20);\n        expected.push(second - first);\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "JUMP", "COPYFROM", "COPYTO", "ADD", "JUMP = 0", "SUB"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 8,
        "expectedExecuteCnt": 25,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Subtraction?!", "In construction, reducing errors means increasing success.", "Did you learn this in school?", "Don’t worry—we’re a good team, and I know you can figure it out!"]
    }, {
        "id": 11,
        "title": "Equalization Room",
        "description": "Get two things from the INBOX.If they are EQUAL, put ONE of them in the OUTBOX. Discard non - equal pairs.\nRepeat!",
        "generatorFunction": "function (generatorFn) {\n    var len = 8;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        var val = generatorFn(1, 20);\n        arr.push(val);\n        if (i % 3 === 0) {\n            arr.push(val);\n        }\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 8;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        var val = generatorFn(1, 20);\n        if (i % 3 === 0) {\n            expected.push(val);\n        }\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "JUMP", "COPYFROM", "COPYTO", "ADD", "JUMP = 0", "SUB"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 8,
        "expectedExecuteCnt": 40,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": ["Sometimes…", "…one stone is stronger than another.", "And sometimes…", "…they’re exactly the same!", "Learn to identify and balance them—that’s the essence of great architecture."]
    }, {
        "id": 12,
        "title": "Maximum Finder",
        "description": "Find the maximum number from a sequence of numbers in the INBOX:\n- For every number in the sequence, compare it with the current maximum.\n- At the end, output the maximum value to the OUTBOX.",
        "generatorFunction": "function (generatorFn) {\n    var len = 6;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(-20, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 6;\n    var nums = [];\n    for (var i = 0; i < len; i++) {\n        nums.push(generatorFn(-20, 20));\n    }\n    return [Math.max(...nums)];\n}",
        "commands": ["INPUT", "OUTPUT", "COPYFROM", "COPYTO", "SUB", "JUMP IF NEGATIVE"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 10,
        "expectedExecuteCnt": 30,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": [
            "Ah, young architect, today we face a peculiar challenge!",
            "The ancient scrolls speak of a mystical number - the mightiest among its peers.",
            "Your task is to examine each stone's weight and find the heaviest one.",
            "Remember: even the smallest detail can reveal something grand."
        ]
    },
    {
        "id": 13,
        "title": "Tetracontiplier",
        "description": "For each number in the INBOX, multiply it by 40 and send the result to the OUTBOX.\n\nHint: Use repeated addition to simulate multiplication.",
        "generatorFunction": "function (generatorFn) {\n    var len = 3;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 10));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 3;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(generatorFn(1, 10) * 40);\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "COPYFROM", "COPYTO", "ADD", "JUMP"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 12,
        "expectedExecuteCnt": 45,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": [
            "The Grand Temple requires exactly forty layers of each stone type!",
            "We need you to calculate the total stones needed for each design.",
            "An experienced craftsman would use their abacus, but I believe in your ability to find a... creative solution.",
            "Time is of essence - show me what you've learned!"
        ]
    },
    {
        "id": 14,
        "title": "Absolute Positivity",
        "description": "Send each number from the INBOX to the OUTBOX. If a number is negative, first remove its negative sign before sending it.\n\nHint: Use subtraction to convert negative numbers to positive.",
        "generatorFunction": "function (generatorFn) {\n    var len = 5;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(-20, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 5;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(Math.abs(generatorFn(-20, 20)));\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "COPYFROM", "COPYTO", "SUB", "JUMP IF NEGATIVE"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 8,
        "expectedExecuteCnt": 25,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": [
            "Listen carefully, apprentice.",
            "The ancient masters taught us that negativity has no place in perfect architecture.",
            "Your task is to find the true value in every measurement, no matter how it appears.",
            "Remember: every shadow can be transformed into light!"
        ]
    },
    {
        "id": 15,
        "title": "Odd or Even Sorter",
        "description": "For each number in the INBOX:\n- Output 0 if the number is even\n- Output 1 if the number is odd\n\nHint: Use subtraction to simulate the modulus operation.",
        "generatorFunction": "function (generatorFn) {\n    var len = 5;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(-10, 10));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 5;\n    var expected = [];\n    for (var i = 0; i < len; i++) {\n        expected.push(Math.abs(generatorFn(-10, 10)) % 2);\n    }\n    return expected;\n}",
        "commands": ["INPUT", "OUTPUT", "COPYFROM", "COPYTO", "SUB", "JUMP", "JUMP IF ZERO"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 12,
        "expectedExecuteCnt": 40,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": [
            "The Temple of Duality awaits your wisdom!",
            "Each stone must be sorted by the ancient principle of balance - the way of odd and even.",
            "Mark each stone's nature - a circle for harmony, a line for discord.",
            "Don't let their numbers deceive you - sometimes the simplest path requires patience."
        ]
    },
    {
        "id": 16,
        "title": "Sorting Algorithm",
        "description": "Sort the numbers in the INBOX in ascending order and output them.\n\nHint: You can implement a simple bubble sort by comparing adjacent pairs and swapping them if they're in the wrong order.",
        "generatorFunction": "function (generatorFn) {\n    var len = 4;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr;\n}",
        "outputFunction": "function (generatorFn) {\n    var len = 4;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(generatorFn(1, 20));\n    }\n    return arr.sort((a, b) => a - b);\n}",
        "commands": ["INPUT", "OUTPUT", "COPYFROM", "COPYTO", "SUB", "JUMP IF NEGATIVE"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 15,
        "expectedExecuteCnt": 50,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": [
            "Chaos! Complete chaos in the stone yard!",
            "These stones must be arranged from smallest to largest before sunset.",
            "I know it's a daunting task, but remember what the old master used to say:",
            "'Even the greatest wall begins with two perfectly aligned stones.'"
        ]
    },
    {
        "id": 17,
        "title": "Fibonacci Generator",
        "description": "Generate the Fibonacci sequence up to a given number (provided in the INBOX) and send each number to the OUTBOX.\n\nHint: Use two floor cells to store the last two numbers in the sequence.",
        "generatorFunction": "function (generatorFn) {\n    return [generatorFn(5, 10)];\n}",
        "outputFunction": "function (generatorFn) {\n    var n = generatorFn(5, 10);\n    var fib = [1, 1];\n    while (fib.length < n) {\n        fib.push(fib[fib.length-1] + fib[fib.length-2]);\n    }\n    return fib;\n}",
        "commands": ["INPUT", "OUTPUT", "COPYFROM", "COPYTO", "ADD"],
        "commandsUsed": [],
        "constructionSlots": [{
            "x": 422.5,
            "y": 380
        }, {
            "x": 522.5,
            "y": 380
        }, {
            "x": 622.5,
            "y": 380
        }],
        "expectedCommandCnt": 12,
        "expectedExecuteCnt": 45,
        "executeCnt": -1,
        "commandCountAchievement": null,
        "executeCountAchievement": null,
        "isLocked": true,
        "timeSpent": 0,
        "timeAccessed": 0,
        "openningInstruction": [
            "Behold! The sacred sequence of the ancients!",
            "Each number is born from the union of its predecessors, creating perfect harmony.",
            "Build this sequence until you reach the prescribed height.",
            "This is no ordinary task - it's the very pattern of creation itself!"
        ]
    }
]