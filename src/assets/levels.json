[{
    "id": 1,
    "title": "Supply Chamber",
    "description": "Each stone is carefully crafted for a specific purpose. Retrieve stones from the ‘Supply Chamber’ and place them in the foundation slots to ensure the structure’s stability.",
    "generatorFunction": "function () {\n    var len = 1;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(Math.random() % 10 + 1);\n    }\n    return arr;\n}",
    "validationFunction": "function (output) {\n    var len = 1;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(Math.random() % 10 + 1);\n    }\n    output.map(function (val, idx) {\n        if (val !== arr[idx]) {\n            return false;\n        }\n    });\n    return true;\n}",
    "commands": ["INPUT", "OUTPUT"],
    "commandsUsed": [],
    "constructionSlots": 0,
    "expectedCommandCnt": 8,
    "expectedExecuteCnt": 25,
    "commandCountAchievement": null,
    "executeCountAchievement": null,
    "isLocked": false
}, {
    "id": 2,
    "title": "Laborer’s Choice",
    "description": "Not all stones fit every part of the foundation. Observe each stone’s shape and size before placing it. Only stones that meet the conditions should be placed.",
    "generatorFunction": "function () {\n    var len = 5;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(Math.random() % 10 + 1);\n    }\n    return arr;\n}",
    "validationFunction": "function (output) {\n    var len = 5;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(Math.random() % 10 + 1);\n    }\n    output.map(function (val, idx) {\n        if (val !== arr[idx]) {\n            return false;\n        }\n    });\n    return true;\n}",
    "commands": ["INPUT", "OUTPUT", "JUMP"],
    "commandsUsed": [],
    "constructionSlots": 0,
    "expectedCommandCnt": 8,
    "expectedExecuteCnt": 25,
    "commandCountAchievement": null,
    "executeCountAchievement": null,
    "isLocked": true
}, {
    "id": 3,
    "title": "Replica Slate",
    "description": "Read and duplicate data from the floor.",
    "generatorFunction": "function () {\n    var len = 6;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(Math.random() % 10 + 1);\n    }\n    return arr;\n}",
    "validationFunction": "function (output) {\n    var len = 6;\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr.push(Math.random() % 10 + 1);\n    }\n    output.map(function (val, idx) {\n        if (val !== arr[idx]) {\n            return false;\n        }\n    });\n    return true;\n}",
    "commands": ["INPUT", "OUTPUT", "JUMP", "COPYTO", "COPYFROM"],
    "commandsUsed": [],
    "constructionSlots": 3,
    "expectedCommandCnt": 8,
    "expectedExecuteCnt": 25,
    "commandCountAchievement": null,
    "executeCountAchievement": null,
    "isLocked": true
}]